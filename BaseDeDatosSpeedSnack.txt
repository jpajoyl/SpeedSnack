CREATE DATABASE `SpeedSnack`;

USE `SpeedSnack`;

CREATE TABLE USUARIO (
	`usuario_login` varchar(20) , 
	`correo_institucional` varchar(30) NOT NULL,
	`nombre` varchar(20) NOT NULL,
	`facultad` varchar(20) NOT NULL,
	`contrase√±a` varchar(20) NOT NULL,
	`descripcion` varchar(255),
	`tipo` varchar(10) NOT NULL,
	`telefono` bigint,
	`disponibilidad` tinyint(1),
	`campus` varchar(10),
	`gustos` varchar(255),
	UNIQUE(`correo_institucional`),
	PRIMARY KEY(`usuario_login`)
);

ALTER TABLE USUARIO ADD 
	CONSTRAINT `chk_tipo`
		CHECK( `tipo` IN ('vendedor','comprador'));

ALTER TABLE USUARIO ADD 
	CONSTRAINT `chk_subtipos`
		CHECK((`tipo` = 'vendedor' AND `telefono` IS NOT NULL AND `disponibilidad` IS NOT NULL AND `campus` IS NOT NULL AND `gustos` IS NULL) OR (tipo = 'comprador' AND `telefono` IS NULL AND `disponibilidad` IS NULL AND `campus` IS NULL AND `gustos` IS NOT NULL));

ALTER TABLE USUARIO ADD 
	CONSTRAINT `chk_campus`
		CHECK (`campus` IN ('minas','volador','rio'));

ALTER TABLE USUARIO ADD 
	CONSTRAINT `chk_correo`
		CHECK (SUBSTRING_INDEX(`correo_institucional`, '@', -1) = 'unal.edu.co');

ALTER TABLE USUARIO ADD 
	CONSTRAINT `chk_usuario_correo`
		CHECK (SUBSTRING_INDEX(`correo_institucional`, '@', 1) = `usuario_login`);


CREATE TABLE COMPRA (
	codigo int(12),
	estado varchar(9) NOT NULL,
	fecha date NOT NULL,
	hora time NOT NULL,
	puntaje_vendedor int(12),
	puntaje_comprador int(12),
	descripcion_vendedor varchar(140),
	descripcion_comprador varchar(140),
	usuario_login_vendedor varchar(20) NOT NULL,
	usuario_login_comprador varchar(20) NOT NULL,
	PRIMARY KEY (codigo),
	FOREIGN KEY (usuario_login_vendedor) REFERENCES USUARIO(usuario_login) ON DELETE CASCADE,
	FOREIGN KEY (usuario_login_comprador) REFERENCES USUARIO(usuario_login) ON DELETE CASCADE,
	CHECK (estado='aceptada' OR estado='rechazada' OR estado='pendiente'),
	CHECK (puntaje_vendedor BETWEEN 0 AND 5),
	CHECK (puntaje_comprador BETWEEN 0 AND 5)
);
ALTER TABLE COMPRA ADD 
	CONSTRAINT chk_tipo_comprador
		CHECK (usuario_login_comprador IN (SELECT usuario_login FROM USUARIO WHERE usuario_login=usuario_login_comprador AND tipo='comprador'));

ALTER TABLE COMPRA ADD 
	CONSTRAINT chk_tipo_vendedor
		CHECK (usuario_login_vendedor IN (SELECT usuario_login FROM USUARIO WHERE usuario_login=usuario_login_vendedor AND tipo='vendedor'));


        
CREATE TABLE SUSCRIPCION(
	codigo_suscripcion int(12) AUTO_INCREMENT,
	notificacion tinyint(1) NOT NULL,
	fecha_inicio date NOT NULL,
	usuario_login_seguidor varchar(20) NOT NULL,
	usuario_login_seguido varchar(20) NOT NULL,
	PRIMARY KEY (codigo_suscripcion),
	UNIQUE (usuario_login_seguidor, usuario_login_seguido),
	FOREIGN KEY (usuario_login_seguido) REFERENCES USUARIO(usuario_login) ON DELETE CASCADE,
	FOREIGN KEY (usuario_login_seguidor) REFERENCES USUARIO(usuario_login) ON DELETE CASCADE,
	CHECK (usuario_login_seguidor <> usuario_login_seguido)
);



CREATE TABLE PUNTO_DE_VENTA(
		`usuario_login` VARCHAR(20) NOT NULL,
		`lugar` VARCHAR(45) NOT NULL,
		`bloque_referencia`VARCHAR(45) NOT NULL,
		PRIMARY KEY(`usuario_login`),
		CONSTRAINT `fk_usuario_login_punto_de_venta`
			FOREIGN KEY(`usuario_login`) REFERENCES `SpeedSnack`.`USUARIO` (`usuario_login`) ON DELETE CASCADE	
	);
ALTER TABLE PUNTO_DE_VENTA ADD 
	CONSTRAINT `chk_tipo`
		CHECK (`usuario_login` IN (SELECT `usuario_login` FROM `USUARIO` WHERE `usuario_login`=`usuario_login` AND `tipo`=`vendedor`));


CREATE TABLE DOMICILIARIO(
		`usuario_login` VARCHAR(20) NOT NULL,
		`intercampus` TINYINT(1) NOT NULL,
		`precio_intercampus`INT(12) NOT NULL,
		PRIMARY KEY(`usuario_login`),
		CONSTRAINT `fk_usuario_login_domiciliario`
			FOREIGN KEY(`usuario_login`) REFERENCES `SpeedSnack`.`USUARIO` (`usuario_login`) ON DELETE CASCADE	
	);
ALTER TABLE DOMICILIARIO ADD 
	CONSTRAINT `chk_tipo`
		CHECK (`usuario_login` IN (SELECT `usuario_login` FROM `USUARIO` WHERE `usuario_login`=`usuario_login` AND `tipo`=`vendedor`));

CREATE TABLE PRODUCTO(
		`codigo_producto` INT NOT NULL AUTO_INCREMENT,
		`nombre` VARCHAR(100) NOT NULL,
		`categoria` VARCHAR(100),
		PRIMARY KEY(`codigo_producto`)
	);

CREATE TABLE INVENTARIOxPRODUCTOxVENDEDOR(
	`usuario_login` varchar(20),
	`codigo_producto` int (12) ,
	`precio` int(12) NOT NULL,
	`unidades` int(12) NOT NULL,
	PRIMARY KEY (`codigo_producto`,`usuario_login`),
	FOREIGN KEY (`usuario_login`) REFERENCES USUARIO(usuario_login) ON DELETE CASCADE,
	FOREIGN KEY (`codigo_producto`) REFERENCES PRODUCTO(codigo_producto) ON DELETE CASCADE

);

ALTER TABLE INVENTARIOxPRODUCTOxVENDEDOR ADD 
	CONSTRAINT `chk_precio`
		CHECK (`precio` >= 0);

ALTER TABLE INVENTARIOxPRODUCTOxVENDEDOR ADD 
	CONSTRAINT `chk_unidades`
		CHECK (`unidades` >= 0);


CREATE TABLE ARTICULO_POR_COMPRA(
		`usuario_login` VARCHAR(20) NOT NULL,
		`codigo_producto` INT(12) NOT NULL,
		`codigo` INT(12) NOT NULL,
		`unidades_compradas` INT(12) NOT NULL,
		PRIMARY KEY(`usuario_login`,`codigo_producto`,`codigo`),
		CONSTRAINT `fk_usuario_login_codigo_producto`
			FOREIGN KEY(`usuario_login`,`codigo_producto`) 
			REFERENCES `SpeedSnack`.`INVENTARIOxPRODUCTOxVENDEDOR` (`usuario_login`,`codigo_producto`) ON DELETE CASCADE,
		CONSTRAINT `fk_codigo`
			FOREIGN KEY(`codigo`)
			REFERENCES `SpeedSnack`.`COMPRA` (`codigo`) ON DELETE CASCADE
	);

ALTER TABLE ARTICULO_POR_COMPRA ADD 
	CONSTRAINT `chk_unidades_compradas`
		CHECK (`unidades_compradas`>0);
